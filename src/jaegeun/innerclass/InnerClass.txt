<InnerClass>
- 접근제한자와 무관하게 접근할 객체를 의미한다.
- 장점 (코드의 구조화, 캡슐화, 재사용성 향상, 특정 상황이나 요구에 맞게 사용 가능)

1) MemberInner : 외부 클래스의 멤버로서 선언되는 내부 클래스이다.
-> 외부의 필드와 메소드에 접근가능하다.
-> 외부의 인스턴스를 생성한 후에 내부의 인스턴스를 생성 가능하다.

2) LocalInner : 메소드나 초기화 블록 내부에서 선언되는 내부 클래스를 의미한다.
-> 선언된 영역 내부에서만 접근이 가능하다.
-> 비록 지역 내부에 생성되는 클래스이지만 상수에는 접근 가능하나 지역 변수에는 접근이 불가능하다.
-> 외부 생성후에 내부 생성 가능

3) StaticInner : 외부 클래스의 정적 멤버로서 선언한다.
-> 외부의 인스턴스와는 독립적으로 동작한다.
-> 외부 클래스의 정적 멤버에만 접근이 가능, 외부 생성없이 생성 가능하다.

4) Anonymous : 이름이 없는 내부 클래스이다.
-> 클래스 정의와 동시에 인스턴스 생성한다.
-> 인터페이스나 추상클래스의 구현체로 사용된다.
-> 확장하는 클래스를 간편하게 정의할 때 사용한다.
-> 다중 상속이 불가능한 자바에서 추상클래스에서 필요한 메소드만을 부분적으로 구현하여 사용할 수 있다.